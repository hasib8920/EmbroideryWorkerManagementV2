@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}
@model EmbroideryWorkerManagement.ViewModels.MachineWorkViewModel

@{
    ViewData["Title"] = "Add Machine Work";
}

<h2>Add Machine Work</h2>

<form asp-action="Create" method="post" class="bg-light p-4 rounded shadow-sm">

    <div class="mb-3">
        <label asp-for="WorkerId" class="form-label"></label>
        <select asp-for="WorkerId" class="form-select" asp-items="@(new SelectList(ViewBag.Workers, "Id", "Name"))">
            <option value="">-- Select Worker --</option>
        </select>
        <span asp-validation-for="WorkerId" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Date" class="form-label"></label>
        <input asp-for="Date" type="date" class="form-control" />
        <span asp-validation-for="Date" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="UnitsProduced" class="form-label"></label>
        <input asp-for="UnitsProduced" class="form-control" />
        <span asp-validation-for="UnitsProduced" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-success">Save</button>
    <a asp-action="Index" class="btn btn-secondary">Back</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
